version: '3.8'

x-minio-common: &minio-common
    image: minio/minio:RELEASE.2022-07-17T15-43-14Z
    command: server --console-address ":9001" http://minio{1...4}/data{1...2}
    expose:
        - "9000"
        - "9001"
    environment:
        MINIO_ACCESS_KEY: admin
        MINIO_SECRET_KEY: password@123
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3

services:
    minio1:
        <<: *minio-common
        hostname: minio1
        volumes:
            - data1-1:/data1
            - data1-2:/data2

    minio2:
        <<: *minio-common
        hostname: minio2
        volumes:
            - data2-1:/data1
            - data2-2:/data2

    minio3:
        <<: *minio-common
        hostname: minio3
        volumes:
            - data3-1:/data1
            - data3-2:/data2

    minio4:
        <<: *minio-common
        hostname: minio4
        volumes:
            - data4-1:/data1
            - data4-2:/data2

    redis1:
        image: redis:latest
        hostname: redis1
        environment:
            - REDIS_PASSWORD=SVTT_CNPT_IT3
        volumes:
            - redis_data:/data
        ports:
            - "5000:6379"

    backend:
        container_name: spring-boot-api
        image: spring-boot-api-web-article:test
        restart: always
        build:
            context: ./
            dockerfile: ./Dockerfile
        ports:
            - "8080:8080"
        environment:
            - MINIO_URL=http://nginx:9000
            - REDIS_HOST=redis1
            - REDIS_PORT=6379
        depends_on:
            - redis1
            - nginx
        links:
            - nginx
            - redis1

    nginx:
        image: nginx:1.19.2-alpine
        hostname: nginx
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
        ports:
            - "9000:9000"
            - "9001:9001"
        depends_on:
            - minio1
            - minio2
            - minio3
            - minio4


## By default, this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
    data1-1:
    data1-2:
    data2-1:
    data2-2:
    data3-1:
    data3-2:
    data4-1:
    data4-2:
    redis_data: { }

