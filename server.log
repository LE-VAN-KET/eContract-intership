2022-07-21 10:49:43.429  INFO 9973 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 9973 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 10:49:43.439  INFO 9973 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 10:49:43.662  INFO 9973 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 10:49:43.664  INFO 9973 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 10:49:47.669  INFO 9973 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 10:49:47.671  INFO 9973 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 10:49:47.920  INFO 9973 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 244 ms. Found 4 MongoDB repository interfaces.
2022-07-21 10:49:47.935  INFO 9973 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 10:49:47.936  INFO 9973 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 10:49:47.955  INFO 9973 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:49:47.956  INFO 9973 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:49:47.957  INFO 9973 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:49:47.958  INFO 9973 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:49:47.958  INFO 9973 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2022-07-21 10:49:49.422  INFO 9973 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 10:49:49.430  INFO 9973 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 10:49:49.430  INFO 9973 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 10:49:49.564  INFO 9973 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 10:49:49.565  INFO 9973 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 5899 ms
2022-07-21 10:49:51.901 ERROR 9973 --- [restartedMain] o.s.b.web.embedded.tomcat.TomcatStarter  : Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'authenticationTokenFilter': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375390, "i": 12}}, "signature": {"hash": {"$binary": {"base64": "Xybhbj9GcKug4fObch+nRbn5sa0=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375390, "i": 12}}}
2022-07-21 10:49:51.939  INFO 9973 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-07-21 10:49:51.948  WARN 9973 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [BufferPoolPruner-1-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:49:51.951  WARN 9973 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8ccde0dcc954ee28ff614', description='null'}-srv-clustermongochannel.lowln.mongodb.net] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor$DnsSrvRecordMonitorRunnable.run(DefaultDnsSrvRecordMonitor.java:108)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:49:51.955  WARN 9973 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8ccde0dcc954ee28ff614', description='null'}-clustermongochannel-shard-00-00.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:49:51.959  WARN 9973 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8ccde0dcc954ee28ff614', description='null'}-clustermongochannel-shard-00-00.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:49:51.961  WARN 9973 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8ccde0dcc954ee28ff614', description='null'}-clustermongochannel-shard-00-01.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:49:51.963  WARN 9973 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8ccde0dcc954ee28ff614', description='null'}-clustermongochannel-shard-00-01.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:49:51.965  WARN 9973 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8ccde0dcc954ee28ff614', description='null'}-clustermongochannel-shard-00-02.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:49:51.967  WARN 9973 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8ccde0dcc954ee28ff614', description='null'}-clustermongochannel-shard-00-02.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:49:51.969  WARN 9973 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-4-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:49:51.971  WARN 9973 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-3-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:49:51.973  WARN 9973 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-2-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:49:51.977  WARN 9973 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2022-07-21 10:49:52.279  INFO 9973 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-21 10:49:52.336 ERROR 9973 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.vnpt.intership.news.NewsApplication.main(NewsApplication.java:23) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.7.1.jar:2.7.1]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:479) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.1.jar:2.7.1]
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authenticationTokenFilter': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375390, "i": 12}}, "signature": {"hash": {"$binary": {"base64": "Xybhbj9GcKug4fObch+nRbn5sa0=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375390, "i": 12}}}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:175) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:170) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:155) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5219) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:835) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:263) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:432) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.1.jar:2.7.1]
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375390, "i": 12}}, "signature": {"hash": {"$binary": {"base64": "Xybhbj9GcKug4fObch+nRbn5sa0=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375390, "i": 12}}}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.21.jar:5.3.21]
	... 60 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375390, "i": 12}}, "signature": {"hash": {"$binary": {"base64": "Xybhbj9GcKug4fObch+nRbn5sa0=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375390, "i": 12}}}
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.21.jar:5.3.21]
	... 74 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375390, "i": 12}}, "signature": {"hash": {"$binary": {"base64": "Xybhbj9GcKug4fObch+nRbn5sa0=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375390, "i": 12}}}
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.21.jar:5.3.21]
	... 87 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375390, "i": 12}}, "signature": {"hash": {"$binary": {"base64": "Xybhbj9GcKug4fObch+nRbn5sa0=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375390, "i": 12}}}
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.21.jar:5.3.21]
	... 97 common frames omitted
Caused by: org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375390, "i": 12}}, "signature": {"hash": {"$binary": {"base64": "Xybhbj9GcKug4fObch+nRbn5sa0=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375390, "i": 12}}}
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.createIndex(MongoPersistentEntityIndexCreator.java:174) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForAndCreateIndexes(MongoPersistentEntityIndexCreator.java:147) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:131) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.<init>(MongoPersistentEntityIndexCreator.java:96) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.<init>(MongoPersistentEntityIndexCreator.java:73) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.MongoTemplate.<init>(MongoTemplate.java:243) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryDependentConfiguration.mongoTemplate(MongoDatabaseFactoryDependentConfiguration.java:63) ~[spring-boot-autoconfigure-2.7.1.jar:2.7.1]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.21.jar:5.3.21]
	... 98 common frames omitted
Caused by: com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375390, "i": 12}}, "signature": {"hash": {"$binary": {"base64": "Xybhbj9GcKug4fObch+nRbn5sa0=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375390, "i": 12}}}
	at com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:198) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:413) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:337) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.UsageTrackingInternalConnection.sendAndReceive(UsageTrackingInternalConnection.java:116) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.sendAndReceive(DefaultConnectionPool.java:644) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.CommandProtocolImpl.execute(CommandProtocolImpl.java:71) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:240) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:226) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.command(DefaultServerConnection.java:126) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.command(DefaultServerConnection.java:116) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServer$OperationCountTrackingConnection.command(DefaultServer.java:345) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CommandOperationHelper.executeCommand(CommandOperationHelper.java:250) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation$1.call(CreateIndexesOperation.java:197) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation$1.call(CreateIndexesOperation.java:192) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.OperationHelper.withConnectionSource(OperationHelper.java:556) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.OperationHelper.withConnection(OperationHelper.java:547) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation.execute(CreateIndexesOperation.java:192) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation.execute(CreateIndexesOperation.java:72) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.execute(MongoClientDelegate.java:212) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.executeCreateIndexes(MongoCollectionImpl.java:848) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndexes(MongoCollectionImpl.java:831) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndexes(MongoCollectionImpl.java:826) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndex(MongoCollectionImpl.java:811) ~[mongodb-driver-sync-4.6.1.jar:na]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.lambda$ensureIndex$0(DefaultIndexOperations.java:131) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:598) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.execute(DefaultIndexOperations.java:214) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.ensureIndex(DefaultIndexOperations.java:121) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.createIndex(MongoPersistentEntityIndexCreator.java:157) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	... 109 common frames omitted

2022-07-21 10:50:52.857  INFO 10138 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 10138 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 10:50:52.859  INFO 10138 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 10:50:52.954  INFO 10138 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 10:50:52.954  INFO 10138 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 10:50:54.571  INFO 10138 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 10:50:54.572  INFO 10138 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 10:50:54.657  INFO 10138 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 81 ms. Found 4 MongoDB repository interfaces.
2022-07-21 10:50:54.671  INFO 10138 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 10:50:54.672  INFO 10138 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 10:50:54.687  INFO 10138 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:50:54.688  INFO 10138 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:50:54.689  INFO 10138 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:50:54.690  INFO 10138 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:50:54.691  INFO 10138 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2022-07-21 10:50:55.463  INFO 10138 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 10:50:55.470  INFO 10138 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 10:50:55.471  INFO 10138 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 10:50:55.547  INFO 10138 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 10:50:55.547  INFO 10138 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2592 ms
2022-07-21 10:50:57.827 ERROR 10138 --- [restartedMain] o.s.b.web.embedded.tomcat.TomcatStarter  : Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'authenticationTokenFilter': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375457, "i": 1}}, "signature": {"hash": {"$binary": {"base64": "DAXcjsgz5LM+23gq0rSsjzS6HYY=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375457, "i": 1}}}
2022-07-21 10:50:57.841  INFO 10138 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-07-21 10:50:57.846  WARN 10138 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [BufferPoolPruner-1-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:50:57.847  WARN 10138 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8cd2054fe431f1af1b343', description='null'}-srv-clustermongochannel.lowln.mongodb.net] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor$DnsSrvRecordMonitorRunnable.run(DefaultDnsSrvRecordMonitor.java:108)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:50:57.848  WARN 10138 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8cd2054fe431f1af1b343', description='null'}-clustermongochannel-shard-00-00.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:50:57.850  WARN 10138 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8cd2054fe431f1af1b343', description='null'}-clustermongochannel-shard-00-00.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:50:57.851  WARN 10138 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8cd2054fe431f1af1b343', description='null'}-clustermongochannel-shard-00-01.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:50:57.852  WARN 10138 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8cd2054fe431f1af1b343', description='null'}-clustermongochannel-shard-00-01.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:50:57.853  WARN 10138 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8cd2054fe431f1af1b343', description='null'}-clustermongochannel-shard-00-02.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:50:57.853  WARN 10138 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8cd2054fe431f1af1b343', description='null'}-clustermongochannel-shard-00-02.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:50:57.854  WARN 10138 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-2-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:50:57.854  WARN 10138 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-4-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:50:57.855  WARN 10138 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-3-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:50:57.857  WARN 10138 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2022-07-21 10:50:58.101  INFO 10138 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-21 10:50:58.169 ERROR 10138 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.vnpt.intership.news.NewsApplication.main(NewsApplication.java:23) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.7.1.jar:2.7.1]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:479) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.1.jar:2.7.1]
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authenticationTokenFilter': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375457, "i": 1}}, "signature": {"hash": {"$binary": {"base64": "DAXcjsgz5LM+23gq0rSsjzS6HYY=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375457, "i": 1}}}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:175) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:170) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:155) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5219) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:835) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:263) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:432) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.1.jar:2.7.1]
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375457, "i": 1}}, "signature": {"hash": {"$binary": {"base64": "DAXcjsgz5LM+23gq0rSsjzS6HYY=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375457, "i": 1}}}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.21.jar:5.3.21]
	... 60 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375457, "i": 1}}, "signature": {"hash": {"$binary": {"base64": "DAXcjsgz5LM+23gq0rSsjzS6HYY=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375457, "i": 1}}}
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.21.jar:5.3.21]
	... 74 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375457, "i": 1}}, "signature": {"hash": {"$binary": {"base64": "DAXcjsgz5LM+23gq0rSsjzS6HYY=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375457, "i": 1}}}
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.21.jar:5.3.21]
	... 87 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375457, "i": 1}}, "signature": {"hash": {"$binary": {"base64": "DAXcjsgz5LM+23gq0rSsjzS6HYY=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375457, "i": 1}}}
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.21.jar:5.3.21]
	... 97 common frames omitted
Caused by: org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375457, "i": 1}}, "signature": {"hash": {"$binary": {"base64": "DAXcjsgz5LM+23gq0rSsjzS6HYY=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375457, "i": 1}}}
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.createIndex(MongoPersistentEntityIndexCreator.java:174) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForAndCreateIndexes(MongoPersistentEntityIndexCreator.java:147) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:131) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.<init>(MongoPersistentEntityIndexCreator.java:96) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.<init>(MongoPersistentEntityIndexCreator.java:73) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.MongoTemplate.<init>(MongoTemplate.java:243) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryDependentConfiguration.mongoTemplate(MongoDatabaseFactoryDependentConfiguration.java:63) ~[spring-boot-autoconfigure-2.7.1.jar:2.7.1]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.21.jar:5.3.21]
	... 98 common frames omitted
Caused by: com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375457, "i": 1}}, "signature": {"hash": {"$binary": {"base64": "DAXcjsgz5LM+23gq0rSsjzS6HYY=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375457, "i": 1}}}
	at com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:198) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:413) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:337) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.UsageTrackingInternalConnection.sendAndReceive(UsageTrackingInternalConnection.java:116) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.sendAndReceive(DefaultConnectionPool.java:644) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.CommandProtocolImpl.execute(CommandProtocolImpl.java:71) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:240) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:226) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.command(DefaultServerConnection.java:126) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.command(DefaultServerConnection.java:116) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServer$OperationCountTrackingConnection.command(DefaultServer.java:345) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CommandOperationHelper.executeCommand(CommandOperationHelper.java:250) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation$1.call(CreateIndexesOperation.java:197) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation$1.call(CreateIndexesOperation.java:192) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.OperationHelper.withConnectionSource(OperationHelper.java:556) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.OperationHelper.withConnection(OperationHelper.java:547) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation.execute(CreateIndexesOperation.java:192) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation.execute(CreateIndexesOperation.java:72) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.execute(MongoClientDelegate.java:212) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.executeCreateIndexes(MongoCollectionImpl.java:848) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndexes(MongoCollectionImpl.java:831) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndexes(MongoCollectionImpl.java:826) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndex(MongoCollectionImpl.java:811) ~[mongodb-driver-sync-4.6.1.jar:na]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.lambda$ensureIndex$0(DefaultIndexOperations.java:131) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:598) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.execute(DefaultIndexOperations.java:214) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.ensureIndex(DefaultIndexOperations.java:121) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.createIndex(MongoPersistentEntityIndexCreator.java:157) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	... 109 common frames omitted

2022-07-21 10:51:54.882  INFO 10284 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 10284 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 10:51:54.884  INFO 10284 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 10:51:54.994  INFO 10284 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 10:51:54.995  INFO 10284 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 10:51:56.582  INFO 10284 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 10:51:56.583  INFO 10284 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 10:51:56.653  INFO 10284 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 66 ms. Found 4 MongoDB repository interfaces.
2022-07-21 10:51:56.664  INFO 10284 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 10:51:56.666  INFO 10284 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 10:51:56.680  INFO 10284 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:51:56.681  INFO 10284 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:51:56.682  INFO 10284 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:51:56.683  INFO 10284 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:51:56.683  INFO 10284 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2022-07-21 10:51:57.734  INFO 10284 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 10:51:57.743  INFO 10284 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 10:51:57.743  INFO 10284 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 10:51:57.809  INFO 10284 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 10:51:57.810  INFO 10284 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2813 ms
2022-07-21 10:51:59.861 ERROR 10284 --- [restartedMain] o.s.b.web.embedded.tomcat.TomcatStarter  : Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'authenticationTokenFilter': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375519, "i": 5}}, "signature": {"hash": {"$binary": {"base64": "soYIvO9CojzKL9OR3zJHg6l8Z28=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375519, "i": 5}}}
2022-07-21 10:51:59.878  INFO 10284 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-07-21 10:51:59.885  WARN 10284 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [BufferPoolPruner-1-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:51:59.886  WARN 10284 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8cd5e6cb4390d34931713', description='null'}-srv-clustermongochannel.lowln.mongodb.net] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor$DnsSrvRecordMonitorRunnable.run(DefaultDnsSrvRecordMonitor.java:108)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:51:59.887  WARN 10284 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8cd5e6cb4390d34931713', description='null'}-clustermongochannel-shard-00-00.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:51:59.888  WARN 10284 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8cd5e6cb4390d34931713', description='null'}-clustermongochannel-shard-00-00.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:51:59.889  WARN 10284 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8cd5e6cb4390d34931713', description='null'}-clustermongochannel-shard-00-01.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:51:59.889  WARN 10284 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8cd5e6cb4390d34931713', description='null'}-clustermongochannel-shard-00-01.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:51:59.890  WARN 10284 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8cd5e6cb4390d34931713', description='null'}-clustermongochannel-shard-00-02.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:51:59.891  WARN 10284 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8cd5e6cb4390d34931713', description='null'}-clustermongochannel-shard-00-02.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:51:59.892  WARN 10284 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-4-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:51:59.892  WARN 10284 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-3-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:51:59.893  WARN 10284 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-2-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:51:59.895  WARN 10284 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2022-07-21 10:52:00.161  INFO 10284 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-21 10:52:00.221 ERROR 10284 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.vnpt.intership.news.NewsApplication.main(NewsApplication.java:23) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.7.1.jar:2.7.1]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:479) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.1.jar:2.7.1]
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authenticationTokenFilter': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375519, "i": 5}}, "signature": {"hash": {"$binary": {"base64": "soYIvO9CojzKL9OR3zJHg6l8Z28=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375519, "i": 5}}}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:175) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:170) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:155) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5219) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:835) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:263) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:432) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.1.jar:2.7.1]
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375519, "i": 5}}, "signature": {"hash": {"$binary": {"base64": "soYIvO9CojzKL9OR3zJHg6l8Z28=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375519, "i": 5}}}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.21.jar:5.3.21]
	... 60 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375519, "i": 5}}, "signature": {"hash": {"$binary": {"base64": "soYIvO9CojzKL9OR3zJHg6l8Z28=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375519, "i": 5}}}
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.21.jar:5.3.21]
	... 74 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375519, "i": 5}}, "signature": {"hash": {"$binary": {"base64": "soYIvO9CojzKL9OR3zJHg6l8Z28=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375519, "i": 5}}}
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.21.jar:5.3.21]
	... 87 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375519, "i": 5}}, "signature": {"hash": {"$binary": {"base64": "soYIvO9CojzKL9OR3zJHg6l8Z28=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375519, "i": 5}}}
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.21.jar:5.3.21]
	... 97 common frames omitted
Caused by: org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375519, "i": 5}}, "signature": {"hash": {"$binary": {"base64": "soYIvO9CojzKL9OR3zJHg6l8Z28=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375519, "i": 5}}}
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.createIndex(MongoPersistentEntityIndexCreator.java:174) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForAndCreateIndexes(MongoPersistentEntityIndexCreator.java:147) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:131) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.<init>(MongoPersistentEntityIndexCreator.java:96) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.<init>(MongoPersistentEntityIndexCreator.java:73) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.MongoTemplate.<init>(MongoTemplate.java:243) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryDependentConfiguration.mongoTemplate(MongoDatabaseFactoryDependentConfiguration.java:63) ~[spring-boot-autoconfigure-2.7.1.jar:2.7.1]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.21.jar:5.3.21]
	... 98 common frames omitted
Caused by: com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375519, "i": 5}}, "signature": {"hash": {"$binary": {"base64": "soYIvO9CojzKL9OR3zJHg6l8Z28=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375519, "i": 5}}}
	at com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:198) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:413) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:337) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.UsageTrackingInternalConnection.sendAndReceive(UsageTrackingInternalConnection.java:116) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.sendAndReceive(DefaultConnectionPool.java:644) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.CommandProtocolImpl.execute(CommandProtocolImpl.java:71) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:240) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:226) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.command(DefaultServerConnection.java:126) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.command(DefaultServerConnection.java:116) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServer$OperationCountTrackingConnection.command(DefaultServer.java:345) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CommandOperationHelper.executeCommand(CommandOperationHelper.java:250) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation$1.call(CreateIndexesOperation.java:197) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation$1.call(CreateIndexesOperation.java:192) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.OperationHelper.withConnectionSource(OperationHelper.java:556) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.OperationHelper.withConnection(OperationHelper.java:547) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation.execute(CreateIndexesOperation.java:192) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation.execute(CreateIndexesOperation.java:72) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.execute(MongoClientDelegate.java:212) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.executeCreateIndexes(MongoCollectionImpl.java:848) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndexes(MongoCollectionImpl.java:831) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndexes(MongoCollectionImpl.java:826) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndex(MongoCollectionImpl.java:811) ~[mongodb-driver-sync-4.6.1.jar:na]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.lambda$ensureIndex$0(DefaultIndexOperations.java:131) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:598) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.execute(DefaultIndexOperations.java:214) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.ensureIndex(DefaultIndexOperations.java:121) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.createIndex(MongoPersistentEntityIndexCreator.java:157) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	... 109 common frames omitted

2022-07-21 10:55:53.519  INFO 10749 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 10749 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 10:55:53.544  INFO 10749 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 10:55:53.747  INFO 10749 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 10:55:53.751  INFO 10749 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 10:55:55.843  INFO 10749 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 10:55:55.845  INFO 10749 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 10:55:55.933  INFO 10749 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 82 ms. Found 4 MongoDB repository interfaces.
2022-07-21 10:55:55.947  INFO 10749 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 10:55:55.948  INFO 10749 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 10:55:55.964  INFO 10749 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:55:55.965  INFO 10749 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:55:55.966  INFO 10749 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:55:55.967  INFO 10749 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:55:55.967  INFO 10749 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2022-07-21 10:55:56.900  INFO 10749 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 10:55:56.909  INFO 10749 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 10:55:56.910  INFO 10749 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 10:55:57.008  INFO 10749 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 10:55:57.009  INFO 10749 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3244 ms
2022-07-21 10:55:59.216 ERROR 10749 --- [restartedMain] o.s.b.web.embedded.tomcat.TomcatStarter  : Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'authenticationTokenFilter': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375759, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "JOe2AiOdUT8aqEN45JU3LvZM2ws=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375759, "i": 2}}}
2022-07-21 10:55:59.231  INFO 10749 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-07-21 10:55:59.235  WARN 10749 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [BufferPoolPruner-1-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:55:59.236  WARN 10749 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8ce4dbf50ca33b64c7356', description='null'}-srv-clustermongochannel.lowln.mongodb.net] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor$DnsSrvRecordMonitorRunnable.run(DefaultDnsSrvRecordMonitor.java:108)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:55:59.237  WARN 10749 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8ce4dbf50ca33b64c7356', description='null'}-clustermongochannel-shard-00-00.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:55:59.238  WARN 10749 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8ce4dbf50ca33b64c7356', description='null'}-clustermongochannel-shard-00-00.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:55:59.239  WARN 10749 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8ce4dbf50ca33b64c7356', description='null'}-clustermongochannel-shard-00-01.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:55:59.243  WARN 10749 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8ce4dbf50ca33b64c7356', description='null'}-clustermongochannel-shard-00-01.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:55:59.244  WARN 10749 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8ce4dbf50ca33b64c7356', description='null'}-clustermongochannel-shard-00-02.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:55:59.245  WARN 10749 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8ce4dbf50ca33b64c7356', description='null'}-clustermongochannel-shard-00-02.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:55:59.246  WARN 10749 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-4-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:55:59.246  WARN 10749 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-2-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:55:59.247  WARN 10749 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-3-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 10:55:59.249  WARN 10749 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2022-07-21 10:55:59.540  INFO 10749 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-21 10:55:59.647 ERROR 10749 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.vnpt.intership.news.NewsApplication.main(NewsApplication.java:23) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.7.1.jar:2.7.1]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:479) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.1.jar:2.7.1]
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authenticationTokenFilter': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375759, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "JOe2AiOdUT8aqEN45JU3LvZM2ws=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375759, "i": 2}}}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:175) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:170) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:155) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5219) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:835) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:263) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:432) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.1.jar:2.7.1]
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375759, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "JOe2AiOdUT8aqEN45JU3LvZM2ws=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375759, "i": 2}}}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.21.jar:5.3.21]
	... 60 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375759, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "JOe2AiOdUT8aqEN45JU3LvZM2ws=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375759, "i": 2}}}
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.21.jar:5.3.21]
	... 74 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375759, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "JOe2AiOdUT8aqEN45JU3LvZM2ws=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375759, "i": 2}}}
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.21.jar:5.3.21]
	... 87 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375759, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "JOe2AiOdUT8aqEN45JU3LvZM2ws=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375759, "i": 2}}}
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.21.jar:5.3.21]
	... 97 common frames omitted
Caused by: org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken, expireAfterSeconds=5}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375759, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "JOe2AiOdUT8aqEN45JU3LvZM2ws=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375759, "i": 2}}}
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.createIndex(MongoPersistentEntityIndexCreator.java:174) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForAndCreateIndexes(MongoPersistentEntityIndexCreator.java:147) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:131) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.<init>(MongoPersistentEntityIndexCreator.java:96) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.<init>(MongoPersistentEntityIndexCreator.java:73) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.MongoTemplate.<init>(MongoTemplate.java:243) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryDependentConfiguration.mongoTemplate(MongoDatabaseFactoryDependentConfiguration.java:63) ~[spring-boot-autoconfigure-2.7.1.jar:2.7.1]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.21.jar:5.3.21]
	... 98 common frames omitted
Caused by: com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 5 }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658375759, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "JOe2AiOdUT8aqEN45JU3LvZM2ws=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658375759, "i": 2}}}
	at com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:198) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:413) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:337) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.UsageTrackingInternalConnection.sendAndReceive(UsageTrackingInternalConnection.java:116) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.sendAndReceive(DefaultConnectionPool.java:644) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.CommandProtocolImpl.execute(CommandProtocolImpl.java:71) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:240) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:226) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.command(DefaultServerConnection.java:126) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.command(DefaultServerConnection.java:116) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServer$OperationCountTrackingConnection.command(DefaultServer.java:345) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CommandOperationHelper.executeCommand(CommandOperationHelper.java:250) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation$1.call(CreateIndexesOperation.java:197) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation$1.call(CreateIndexesOperation.java:192) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.OperationHelper.withConnectionSource(OperationHelper.java:556) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.OperationHelper.withConnection(OperationHelper.java:547) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation.execute(CreateIndexesOperation.java:192) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation.execute(CreateIndexesOperation.java:72) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.execute(MongoClientDelegate.java:212) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.executeCreateIndexes(MongoCollectionImpl.java:848) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndexes(MongoCollectionImpl.java:831) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndexes(MongoCollectionImpl.java:826) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndex(MongoCollectionImpl.java:811) ~[mongodb-driver-sync-4.6.1.jar:na]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.lambda$ensureIndex$0(DefaultIndexOperations.java:131) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:598) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.execute(DefaultIndexOperations.java:214) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.ensureIndex(DefaultIndexOperations.java:121) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.createIndex(MongoPersistentEntityIndexCreator.java:157) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	... 109 common frames omitted

2022-07-21 10:56:53.084  INFO 10874 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 10874 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 10:56:53.086  INFO 10874 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 10:56:53.208  INFO 10874 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 10:56:53.210  INFO 10874 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 10:56:55.163  INFO 10874 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 10:56:55.164  INFO 10874 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 10:56:55.242  INFO 10874 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 74 ms. Found 4 MongoDB repository interfaces.
2022-07-21 10:56:55.253  INFO 10874 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 10:56:55.255  INFO 10874 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 10:56:55.272  INFO 10874 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:56:55.274  INFO 10874 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:56:55.275  INFO 10874 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:56:55.277  INFO 10874 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 10:56:55.277  INFO 10874 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2022-07-21 10:56:56.198  INFO 10874 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 10:56:56.208  INFO 10874 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 10:56:56.209  INFO 10874 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 10:56:56.309  INFO 10874 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 10:56:56.309  INFO 10874 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3097 ms
2022-07-21 10:56:59.089  INFO 10874 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-21 10:56:59.941  WARN 10874 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 10:56:59.942  INFO 10874 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/api-docs/**']
2022-07-21 10:56:59.943  WARN 10874 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui-custom.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 10:56:59.943  INFO 10874 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui-custom.html']
2022-07-21 10:56:59.944  WARN 10874 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 10:56:59.944  INFO 10874 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2022-07-21 10:56:59.997  INFO 10874 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@23ee823b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5eca5672, org.springframework.security.web.context.SecurityContextPersistenceFilter@30b9fc2, org.springframework.security.web.header.HeaderWriterFilter@39ca8a6, org.springframework.web.filter.CorsFilter@4928f974, org.springframework.security.web.authentication.logout.LogoutFilter@741767da, com.vnpt.intership.news.api.v1.config.security.AuthenticationTokenFilter@18a05ff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c820558, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@40793bf4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@460a9da6, org.springframework.security.web.session.SessionManagementFilter@51eff101, org.springframework.security.web.access.ExceptionTranslationFilter@30278696, org.springframework.security.web.access.intercept.AuthorizationFilter@48d90e9f]
2022-07-21 10:57:01.398  INFO 10874 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-21 10:57:01.503  INFO 10874 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-21 10:57:01.515  INFO 10874 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Started NewsApplication in 9.189 seconds (JVM running for 10.881)
2022-07-21 10:57:01.535 DEBUG 10874 --- [restartedMain] o.s.data.mongodb.core.MongoTemplate      : find using query: {} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.RoleEntity in collection: Role
2022-07-21 10:57:01.959  INFO 10874 --- [RMI TCP Connection(1)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-21 10:57:01.964  INFO 10874 --- [RMI TCP Connection(1)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-21 10:57:01.966  INFO 10874 --- [RMI TCP Connection(1)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2022-07-21 10:57:12.907  INFO 10874 --- [http-nio-8080-exec-9] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 358 ms
2022-07-21 10:57:43.449 DEBUG 10874 --- [http-nio-8080-exec-9] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 10:57:43.880 DEBUG 10874 --- [http-nio-8080-exec-9] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 10:57:44.374 DEBUG 10874 --- [http-nio-8080-exec-9] o.s.data.mongodb.core.MongoTemplate      : Saving Document containing fields: [_id, username, email, password, authIdentity, roles, createAt, updateAt, _class]
2022-07-21 10:57:44.502  INFO 10874 --- [http-nio-8080-exec-9] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.signIn, time=1110, unit=MILLISECONDS
2022-07-21 11:01:18.478  INFO 11458 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 11458 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 11:01:18.482  INFO 11458 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 11:01:18.563  INFO 11458 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 11:01:18.563  INFO 11458 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 11:01:19.941  INFO 11458 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 11:01:19.942  INFO 11458 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 11:01:20.013  INFO 11458 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 67 ms. Found 4 MongoDB repository interfaces.
2022-07-21 11:01:20.024  INFO 11458 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 11:01:20.025  INFO 11458 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 11:01:20.038  INFO 11458 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 11:01:20.039  INFO 11458 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 11:01:20.040  INFO 11458 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 11:01:20.041  INFO 11458 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 11:01:20.041  INFO 11458 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2022-07-21 11:01:20.876  INFO 11458 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 11:01:20.884  INFO 11458 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 11:01:20.884  INFO 11458 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 11:01:20.956  INFO 11458 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 11:01:20.956  INFO 11458 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2391 ms
2022-07-21 11:01:23.746  INFO 11458 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-21 11:01:25.069  WARN 11458 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 11:01:25.070  INFO 11458 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/api-docs/**']
2022-07-21 11:01:25.071  WARN 11458 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui-custom.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 11:01:25.071  INFO 11458 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui-custom.html']
2022-07-21 11:01:25.071  WARN 11458 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 11:01:25.072  INFO 11458 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2022-07-21 11:01:25.133  INFO 11458 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@47cfca4e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7240443, org.springframework.security.web.context.SecurityContextPersistenceFilter@53e7b1d0, org.springframework.security.web.header.HeaderWriterFilter@55bdacd9, org.springframework.web.filter.CorsFilter@62eec8f6, org.springframework.security.web.authentication.logout.LogoutFilter@2b10c3d7, com.vnpt.intership.news.api.v1.config.security.AuthenticationTokenFilter@36d56ca, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6a34e9ef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e319d7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@66665614, org.springframework.security.web.session.SessionManagementFilter@19a5d544, org.springframework.security.web.access.ExceptionTranslationFilter@5a6852c7, org.springframework.security.web.access.intercept.AuthorizationFilter@278507fc]
2022-07-21 11:01:26.563  INFO 11458 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-21 11:01:26.708  INFO 11458 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-21 11:01:26.737  INFO 11458 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Started NewsApplication in 8.959 seconds (JVM running for 10.096)
2022-07-21 11:01:26.771 DEBUG 11458 --- [restartedMain] o.s.data.mongodb.core.MongoTemplate      : find using query: {} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.RoleEntity in collection: Role
2022-07-21 11:01:26.994  INFO 11458 --- [RMI TCP Connection(6)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-21 11:01:26.995  INFO 11458 --- [RMI TCP Connection(6)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-21 11:01:26.998  INFO 11458 --- [RMI TCP Connection(6)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2022-07-21 11:01:28.193 DEBUG 11458 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 11:01:28.620 DEBUG 11458 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 11:01:28.990 ERROR 11458 --- [http-nio-8080-exec-1] c.v.i.n.a.v.s.impl.UserServiceImpl       : eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ2YW5rZXQiLCJyb2xlcyI6W10sImV4cCI6MTY1ODQ2MjI2NCwiaWF0IjoxNjU4Mzc1ODY0fQ.M17IxH6wHLE7-QDZLk4aqJY2U07DeDFULDjDhdZI9Z-OCABe29x3eudpec1ms7tDZcDGUx8QXvKRyNE6dGrPu-yYkZCLrOxUA8yIhe5Jj4qC35kmTneDArHagoxoZFk_jNartK57_IApbLhCbsIV6TMUiNWwerPwnaYHv9O0fZX86fX6_DcVAfGBOQuqL0oeldIWaqmDR6ymauP9p1hoF4IkcVMsVQEUL6UHrUggYru6ZhXfLlxvhppqNd84BL_hUCkQjJnNNzh7KuWxiGfzLgKf0Fy4vRDXhOxhX8dglopESEMF46gJQu495tksPGGTX8gUIuDYwY-nHOwbKb19yg
2022-07-21 11:01:29.010 DEBUG 11458 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : Saving Document containing fields: [_id, username, email, password, authIdentity, roles, createAt, updateAt, _class]
2022-07-21 11:01:29.080  INFO 11458 --- [http-nio-8080-exec-1] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.signIn, time=910, unit=MILLISECONDS
2022-07-21 12:40:41.303  INFO 18175 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 18175 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 12:40:41.306  INFO 18175 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 12:40:41.435  INFO 18175 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 12:40:41.436  INFO 18175 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 12:40:43.538  INFO 18175 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 12:40:43.539  INFO 18175 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 12:40:43.759  INFO 18175 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 214 ms. Found 4 MongoDB repository interfaces.
2022-07-21 12:40:43.784  INFO 18175 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 12:40:43.786  INFO 18175 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 12:40:43.809  INFO 18175 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:40:43.809  INFO 18175 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:40:43.810  INFO 18175 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:40:43.812  INFO 18175 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:40:43.812  INFO 18175 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2022-07-21 12:40:45.251  INFO 18175 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 12:40:45.260  INFO 18175 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 12:40:45.261  INFO 18175 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 12:40:45.371  INFO 18175 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 12:40:45.372  INFO 18175 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3935 ms
2022-07-21 12:40:48.013 ERROR 18175 --- [restartedMain] o.s.b.web.embedded.tomcat.TomcatStarter  : Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'authenticationTokenFilter': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658382047, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "VDjlSRWEGzSViwtdanjm/JU8hrk=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658382047, "i": 2}}}
2022-07-21 12:40:48.035  INFO 18175 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-07-21 12:40:48.039  WARN 18175 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [BufferPoolPruner-1-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 12:40:48.040  WARN 18175 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8e6de285df67f88391967', description='null'}-srv-clustermongochannel.lowln.mongodb.net] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor$DnsSrvRecordMonitorRunnable.run(DefaultDnsSrvRecordMonitor.java:108)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 12:40:48.041  WARN 18175 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8e6de285df67f88391967', description='null'}-clustermongochannel-shard-00-00.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 12:40:48.041  WARN 18175 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8e6de285df67f88391967', description='null'}-clustermongochannel-shard-00-00.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 12:40:48.042  WARN 18175 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8e6de285df67f88391967', description='null'}-clustermongochannel-shard-00-01.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 12:40:48.042  WARN 18175 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8e6de285df67f88391967', description='null'}-clustermongochannel-shard-00-01.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 12:40:48.043  WARN 18175 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='62d8e6de285df67f88391967', description='null'}-clustermongochannel-shard-00-02.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.net.SocketInputStream.socketRead0(Native Method)
 java.base@11.0.15/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:168)
 java.base@11.0.15/java.net.SocketInputStream.read(SocketInputStream.java:140)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
 java.base@11.0.15/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1454)
 java.base@11.0.15/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1065)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 12:40:48.043  WARN 18175 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='62d8e6de285df67f88391967', description='null'}-clustermongochannel-shard-00-02.lowln.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 12:40:48.044  WARN 18175 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-2-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 12:40:48.044  WARN 18175 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-4-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 12:40:48.044  WARN 18175 --- [restartedMain] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MaintenanceTimer-3-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.15/java.lang.Thread.run(Thread.java:829)
2022-07-21 12:40:48.046  WARN 18175 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2022-07-21 12:40:48.366  INFO 18175 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-21 12:40:48.413 ERROR 18175 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.vnpt.intership.news.NewsApplication.main(NewsApplication.java:23) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.7.1.jar:2.7.1]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:479) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.1.jar:2.7.1]
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authenticationTokenFilter': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658382047, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "VDjlSRWEGzSViwtdanjm/JU8hrk=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658382047, "i": 2}}}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:175) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:170) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:155) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5219) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:835) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:263) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:432) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.64.jar:9.0.64]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.1.jar:2.7.1]
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailServiceImpl': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658382047, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "VDjlSRWEGzSViwtdanjm/JU8hrk=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658382047, "i": 2}}}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.21.jar:5.3.21]
	... 60 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.vnpt.intership.news.api.v1.repository.UserRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658382047, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "VDjlSRWEGzSViwtdanjm/JU8hrk=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658382047, "i": 2}}}
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.21.jar:5.3.21]
	... 74 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658382047, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "VDjlSRWEGzSViwtdanjm/JU8hrk=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658382047, "i": 2}}}
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.21.jar:5.3.21]
	... 87 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658382047, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "VDjlSRWEGzSViwtdanjm/JU8hrk=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658382047, "i": 2}}}
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.21.jar:5.3.21]
	... 97 common frames omitted
Caused by: org.springframework.dao.DataIntegrityViolationException: Cannot create index for 'authIdentity.refreshToken' in collection 'User' with keys 'Document{{authIdentity.refreshToken=1}}' and options 'Document{{name=authIdentity.refreshToken}}'. Index already defined as 'IndexInfo [indexFields=[IndexField [ key: authIdentity.refreshToken, direction: ASC, type: DEFAULT, weight: NaN]], name=authIdentity.refreshToken, unique=false, sparse=false, language=, partialFilterExpression=null, collation=null, expireAfterSeconds=PT5M]'.; nested exception is com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658382047, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "VDjlSRWEGzSViwtdanjm/JU8hrk=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658382047, "i": 2}}}
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.createIndex(MongoPersistentEntityIndexCreator.java:174) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForAndCreateIndexes(MongoPersistentEntityIndexCreator.java:147) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:131) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.<init>(MongoPersistentEntityIndexCreator.java:96) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.<init>(MongoPersistentEntityIndexCreator.java:73) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.MongoTemplate.<init>(MongoTemplate.java:243) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryDependentConfiguration.mongoTemplate(MongoDatabaseFactoryDependentConfiguration.java:63) ~[spring-boot-autoconfigure-2.7.1.jar:2.7.1]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.21.jar:5.3.21]
	... 98 common frames omitted
Caused by: com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: "authIdentity.refreshToken", expireAfterSeconds: 300 }' on server clustermongochannel-shard-00-02.lowln.mongodb.net:27017. The full response is {"ok": 0.0, "errmsg": "An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\" }, existing index: { v: 2, key: { authIdentity.refreshToken: 1 }, name: \"authIdentity.refreshToken\", expireAfterSeconds: 300 }", "code": 85, "codeName": "IndexOptionsConflict", "$clusterTime": {"clusterTime": {"$timestamp": {"t": 1658382047, "i": 2}}, "signature": {"hash": {"$binary": {"base64": "VDjlSRWEGzSViwtdanjm/JU8hrk=", "subType": "00"}}, "keyId": 7070167410812125189}}, "operationTime": {"$timestamp": {"t": 1658382047, "i": 2}}}
	at com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:198) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:413) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:337) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.UsageTrackingInternalConnection.sendAndReceive(UsageTrackingInternalConnection.java:116) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.sendAndReceive(DefaultConnectionPool.java:644) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.CommandProtocolImpl.execute(CommandProtocolImpl.java:71) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:240) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:226) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.command(DefaultServerConnection.java:126) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerConnection.command(DefaultServerConnection.java:116) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.connection.DefaultServer$OperationCountTrackingConnection.command(DefaultServer.java:345) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CommandOperationHelper.executeCommand(CommandOperationHelper.java:250) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation$1.call(CreateIndexesOperation.java:197) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation$1.call(CreateIndexesOperation.java:192) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.OperationHelper.withConnectionSource(OperationHelper.java:556) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.OperationHelper.withConnection(OperationHelper.java:547) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation.execute(CreateIndexesOperation.java:192) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.internal.operation.CreateIndexesOperation.execute(CreateIndexesOperation.java:72) ~[mongodb-driver-core-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.execute(MongoClientDelegate.java:212) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.executeCreateIndexes(MongoCollectionImpl.java:848) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndexes(MongoCollectionImpl.java:831) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndexes(MongoCollectionImpl.java:826) ~[mongodb-driver-sync-4.6.1.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndex(MongoCollectionImpl.java:811) ~[mongodb-driver-sync-4.6.1.jar:na]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.lambda$ensureIndex$0(DefaultIndexOperations.java:131) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:598) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.execute(DefaultIndexOperations.java:214) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.ensureIndex(DefaultIndexOperations.java:121) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.createIndex(MongoPersistentEntityIndexCreator.java:157) ~[spring-data-mongodb-3.4.1.jar:3.4.1]
	... 109 common frames omitted

2022-07-21 12:42:25.180  INFO 18416 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 18416 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 12:42:25.182  INFO 18416 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 12:42:25.291  INFO 18416 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 12:42:25.292  INFO 18416 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 12:42:27.425  INFO 18416 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 12:42:27.426  INFO 18416 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 12:42:27.530  INFO 18416 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 97 ms. Found 4 MongoDB repository interfaces.
2022-07-21 12:42:27.546  INFO 18416 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 12:42:27.548  INFO 18416 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 12:42:27.589  INFO 18416 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:42:27.591  INFO 18416 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:42:27.595  INFO 18416 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:42:27.599  INFO 18416 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:42:27.601  INFO 18416 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2022-07-21 12:42:28.983  INFO 18416 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 12:42:28.996  INFO 18416 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 12:42:28.997  INFO 18416 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 12:42:29.178  INFO 18416 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 12:42:29.178  INFO 18416 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3885 ms
2022-07-21 12:42:33.366  INFO 18416 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-21 12:42:34.670  WARN 18416 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 12:42:34.671  INFO 18416 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/api-docs/**']
2022-07-21 12:42:34.675  WARN 18416 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui-custom.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 12:42:34.676  INFO 18416 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui-custom.html']
2022-07-21 12:42:34.677  WARN 18416 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 12:42:34.677  INFO 18416 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2022-07-21 12:42:34.930  INFO 18416 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7aac05f9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c6ca60e, org.springframework.security.web.context.SecurityContextPersistenceFilter@599f75e, org.springframework.security.web.header.HeaderWriterFilter@74ce7c24, org.springframework.web.filter.CorsFilter@61c9df41, org.springframework.security.web.authentication.logout.LogoutFilter@415d42dc, com.vnpt.intership.news.api.v1.config.security.AuthenticationTokenFilter@2a4fbf4e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3e496f91, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@248f1601, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24f85073, org.springframework.security.web.session.SessionManagementFilter@38247428, org.springframework.security.web.access.ExceptionTranslationFilter@7f930f87, org.springframework.security.web.access.intercept.AuthorizationFilter@52f0bd5]
2022-07-21 12:42:37.822  INFO 18416 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-21 12:42:37.961  INFO 18416 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-21 12:42:37.978  INFO 18416 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Started NewsApplication in 13.649 seconds (JVM running for 15.906)
2022-07-21 12:42:38.001 DEBUG 18416 --- [restartedMain] o.s.data.mongodb.core.MongoTemplate      : find using query: {} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.RoleEntity in collection: Role
2022-07-21 12:42:38.407  INFO 18416 --- [RMI TCP Connection(11)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-21 12:42:38.412  INFO 18416 --- [RMI TCP Connection(11)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-21 12:42:38.414  INFO 18416 --- [RMI TCP Connection(11)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2022-07-21 12:42:43.189 DEBUG 18416 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 12:42:43.558 DEBUG 18416 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 12:42:44.112 ERROR 18416 --- [http-nio-8080-exec-1] c.v.i.n.a.v.s.impl.UserServiceImpl       : null
2022-07-21 12:42:44.143 DEBUG 18416 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : Saving Document containing fields: [_id, username, email, password, authIdentity, roles, createAt, updateAt, _class]
2022-07-21 12:42:44.306  INFO 18416 --- [http-nio-8080-exec-1] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.signIn, time=1129, unit=MILLISECONDS
2022-07-21 12:44:34.650  INFO 18849 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 18849 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 12:44:34.652  INFO 18849 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 12:44:34.739  INFO 18849 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 12:44:34.739  INFO 18849 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 12:44:37.820  INFO 18849 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 12:44:37.821  INFO 18849 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 12:44:37.941  INFO 18849 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 114 ms. Found 4 MongoDB repository interfaces.
2022-07-21 12:44:37.957  INFO 18849 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 12:44:37.959  INFO 18849 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 12:44:37.978  INFO 18849 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:44:37.981  INFO 18849 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:44:37.982  INFO 18849 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:44:37.984  INFO 18849 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:44:37.985  INFO 18849 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2022-07-21 12:44:39.282  INFO 18849 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 12:44:39.291  INFO 18849 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 12:44:39.291  INFO 18849 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 12:44:39.358  INFO 18849 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 12:44:39.358  INFO 18849 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4618 ms
2022-07-21 12:44:42.524  INFO 18849 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-21 12:44:43.253  WARN 18849 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 12:44:43.254  INFO 18849 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/api-docs/**']
2022-07-21 12:44:43.254  WARN 18849 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui-custom.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 12:44:43.254  INFO 18849 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui-custom.html']
2022-07-21 12:44:43.255  WARN 18849 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 12:44:43.255  INFO 18849 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2022-07-21 12:44:43.310  INFO 18849 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@20cf3e80, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32d04d2a, org.springframework.security.web.context.SecurityContextPersistenceFilter@7c7637d2, org.springframework.security.web.header.HeaderWriterFilter@25292713, org.springframework.web.filter.CorsFilter@3fd9eeae, org.springframework.security.web.authentication.logout.LogoutFilter@855508e, com.vnpt.intership.news.api.v1.config.security.AuthenticationTokenFilter@222b08a9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22c8ebfd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5be11e2c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@288936f1, org.springframework.security.web.session.SessionManagementFilter@3029ed9e, org.springframework.security.web.access.ExceptionTranslationFilter@1239482a, org.springframework.security.web.access.intercept.AuthorizationFilter@665f426f]
2022-07-21 12:44:44.720  INFO 18849 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-21 12:44:44.823  INFO 18849 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-21 12:44:44.835  INFO 18849 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Started NewsApplication in 10.935 seconds (JVM running for 12.013)
2022-07-21 12:44:44.862 DEBUG 18849 --- [restartedMain] o.s.data.mongodb.core.MongoTemplate      : find using query: {} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.RoleEntity in collection: Role
2022-07-21 12:44:45.299  INFO 18849 --- [RMI TCP Connection(7)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-21 12:44:45.300  INFO 18849 --- [RMI TCP Connection(7)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-21 12:44:45.304  INFO 18849 --- [RMI TCP Connection(7)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2022-07-21 12:44:50.448 DEBUG 18849 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 12:44:50.893 DEBUG 18849 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 12:44:51.219 DEBUG 18849 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : Saving Document containing fields: [_id, username, email, password, authIdentity, roles, createAt, updateAt, _class]
2022-07-21 12:44:51.292  INFO 18849 --- [http-nio-8080-exec-1] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.signIn, time=876, unit=MILLISECONDS
2022-07-21 12:45:25.984  INFO 18849 --- [http-nio-8080-exec-7] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 236 ms
2022-07-21 12:45:36.790 DEBUG 18849 --- [http-nio-8080-exec-8] o.s.data.mongodb.core.MongoTemplate      : find using query: { "authIdentity.refreshToken" : "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ2YW5rZXQiLCJyb2xlcyI6W10sImV4cCI6MTY1ODk4NzA5MSwiaWF0IjoxNjU4MzgyMjkxfQ.aV7HBG7Su72t9K15akN446ZugVsZROKuCcsgCDlKvpvYqRM_CFBHo7oaLRzzj395qRD5eMOoHgw_cIQg1bj8-y3F7F1mjw0_5CjuA3r8X4RPfHDi3gGza2A72PR4Y18nll8TrjX-7yCDPTDWCcquigt_5Rwb0-b2Dhw2OotAM5Fg7uHqc12-uMjweT0Ww8WQkwwLYTepruFwREq4Yi5AV8wQFj50W_4ZXsnL0wPJbGaVnMlyhqdsPE_W_-I706qEX14F9pQBXEb7qXDlss_y3-qLwQpr75sv6PjaI9JjysC4y83EGSOgMWGSADZB_Jb6auu8xceQuw1QWc12R_IzcQ"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 12:45:36.849  INFO 18849 --- [http-nio-8080-exec-8] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.refreshToken, time=79, unit=MILLISECONDS
2022-07-21 12:45:36.851 ERROR 18849 --- [http-nio-8080-exec-8] c.v.i.n.a.v.e.GlobalExceptionHandler     : Bad request: Refresh token was expired. Please make a new login request
2022-07-21 12:51:26.039  INFO 19619 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 19619 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 12:51:26.041  INFO 19619 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 12:51:26.118  INFO 19619 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 12:51:26.119  INFO 19619 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 12:51:27.735  INFO 19619 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 12:51:27.735  INFO 19619 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 12:51:27.806  INFO 19619 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 66 ms. Found 4 MongoDB repository interfaces.
2022-07-21 12:51:27.817  INFO 19619 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 12:51:27.818  INFO 19619 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 12:51:27.831  INFO 19619 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:51:27.832  INFO 19619 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:51:27.833  INFO 19619 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:51:27.834  INFO 19619 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 12:51:27.834  INFO 19619 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2022-07-21 12:51:28.658  INFO 19619 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 12:51:28.670  INFO 19619 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 12:51:28.671  INFO 19619 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 12:51:28.801  INFO 19619 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 12:51:28.801  INFO 19619 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2681 ms
2022-07-21 12:51:31.443  INFO 19619 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-21 12:51:32.106  WARN 19619 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 12:51:32.107  INFO 19619 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/api-docs/**']
2022-07-21 12:51:32.108  WARN 19619 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui-custom.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 12:51:32.108  INFO 19619 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui-custom.html']
2022-07-21 12:51:32.108  WARN 19619 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 12:51:32.108  INFO 19619 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2022-07-21 12:51:32.156  INFO 19619 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@58e0e944, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@d2f90e8, org.springframework.security.web.context.SecurityContextPersistenceFilter@69710f1b, org.springframework.security.web.header.HeaderWriterFilter@4a7b9490, org.springframework.web.filter.CorsFilter@583d1be1, org.springframework.security.web.authentication.logout.LogoutFilter@292d1799, com.vnpt.intership.news.api.v1.config.security.AuthenticationTokenFilter@5f64f5d9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5cbd8b42, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@687e7005, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46950518, org.springframework.security.web.session.SessionManagementFilter@71d1a349, org.springframework.security.web.access.ExceptionTranslationFilter@61167e33, org.springframework.security.web.access.intercept.AuthorizationFilter@b751c5e]
2022-07-21 12:51:33.318  INFO 19619 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-21 12:51:33.421  INFO 19619 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-21 12:51:33.434  INFO 19619 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Started NewsApplication in 8.159 seconds (JVM running for 9.196)
2022-07-21 12:51:33.459 DEBUG 19619 --- [restartedMain] o.s.data.mongodb.core.MongoTemplate      : find using query: {} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.RoleEntity in collection: Role
2022-07-21 12:51:33.957  INFO 19619 --- [RMI TCP Connection(5)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-21 12:51:33.967  INFO 19619 --- [RMI TCP Connection(5)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-21 12:51:33.969  INFO 19619 --- [RMI TCP Connection(5)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2022-07-21 12:52:00.281 DEBUG 19619 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "authIdentity.refreshToken" : "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ2YW5rZXQiLCJyb2xlcyI6W10sImV4cCI6MTY1ODk4NzA5MSwiaWF0IjoxNjU4MzgyMjkxfQ.aV7HBG7Su72t9K15akN446ZugVsZROKuCcsgCDlKvpvYqRM_CFBHo7oaLRzzj395qRD5eMOoHgw_cIQg1bj8-y3F7F1mjw0_5CjuA3r8X4RPfHDi3gGza2A72PR4Y18nll8TrjX-7yCDPTDWCcquigt_5Rwb0-b2Dhw2OotAM5Fg7uHqc12-uMjweT0Ww8WQkwwLYTepruFwREq4Yi5AV8wQFj50W_4ZXsnL0wPJbGaVnMlyhqdsPE_W_-I706qEX14F9pQBXEb7qXDlss_y3-qLwQpr75sv6PjaI9JjysC4y83EGSOgMWGSADZB_Jb6auu8xceQuw1QWc12R_IzcQ"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 12:52:00.392  INFO 19619 --- [http-nio-8080-exec-1] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.refreshToken, time=142, unit=MILLISECONDS
2022-07-21 12:52:00.396 ERROR 19619 --- [http-nio-8080-exec-1] c.v.i.n.a.v.e.GlobalExceptionHandler     : SERVER ERROR: java.lang.ClassCastException: class java.lang.String cannot be cast to class org.springframework.security.core.userdetails.User (java.lang.String is in module java.base of loader 'bootstrap'; org.springframework.security.core.userdetails.User is in unnamed module of loader 'app')
2022-07-21 12:53:36.846 DEBUG 19619 --- [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 12:53:37.178 DEBUG 19619 --- [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 12:53:37.590 DEBUG 19619 --- [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : Saving Document containing fields: [_id, username, email, password, authIdentity, roles, createAt, updateAt, _class]
2022-07-21 12:53:37.668  INFO 19619 --- [http-nio-8080-exec-2] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.signIn, time=827, unit=MILLISECONDS
2022-07-21 12:53:52.669 DEBUG 19619 --- [http-nio-8080-exec-3] o.s.data.mongodb.core.MongoTemplate      : find using query: { "authIdentity.refreshToken" : "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ2YW5rZXQiLCJyb2xlcyI6W10sImV4cCI6MTY1ODk4NzYxNywiaWF0IjoxNjU4MzgyODE3fQ.RNfXwc6OqY_yKw4nRA_-hGhBNo-Ov8X021Lm4vmW5TURhXuupDL-qrujZHrWu1RGyVPxG0_vmxcwv7_-TutoLBo6W-LKcW0YEFUkI0ltyvrKfVkq-__gUzVsteIGgFU_5deCeZCk0qs6VnihDdKN00Ewp89zFwtRE_rpywjTHHxmwqFhZlapd7rRX9G784BchCb5vIQEwNPTW3iWL2zLd4KPIPiVdPDSbCV9-owpq6ulzuZx4sjG2uY9ntVWhmrh35-YHRwGgXblD29gJ4up-7bQwT4g5w0urwKsRUuTOqzi9HXbLot3gyOiZw0V1FRBQczaGNagfvxM0inr-ntveQ"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 12:53:52.741  INFO 19619 --- [http-nio-8080-exec-3] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.refreshToken, time=74, unit=MILLISECONDS
2022-07-21 12:53:52.742 ERROR 19619 --- [http-nio-8080-exec-3] c.v.i.n.a.v.e.GlobalExceptionHandler     : SERVER ERROR: java.lang.ClassCastException: class java.lang.String cannot be cast to class org.springframework.security.core.userdetails.User (java.lang.String is in module java.base of loader 'bootstrap'; org.springframework.security.core.userdetails.User is in unnamed module of loader 'app')
2022-07-21 13:06:49.075  INFO 21081 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 21081 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 13:06:49.090  INFO 21081 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 13:06:49.264  INFO 21081 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 13:06:49.265  INFO 21081 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 13:06:52.447  INFO 21081 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:06:52.448  INFO 21081 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 13:06:52.529  INFO 21081 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 77 ms. Found 4 MongoDB repository interfaces.
2022-07-21 13:06:52.544  INFO 21081 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:06:52.545  INFO 21081 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 13:06:52.563  INFO 21081 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:06:52.564  INFO 21081 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:06:52.565  INFO 21081 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:06:52.565  INFO 21081 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:06:52.566  INFO 21081 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2022-07-21 13:06:53.677  INFO 21081 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 13:06:53.685  INFO 21081 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 13:06:53.686  INFO 21081 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 13:06:53.776  INFO 21081 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 13:06:53.777  INFO 21081 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4511 ms
2022-07-21 13:06:56.565  INFO 21081 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-21 13:06:57.490  WARN 21081 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:06:57.491  INFO 21081 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/api-docs/**']
2022-07-21 13:06:57.492  WARN 21081 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui-custom.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:06:57.492  INFO 21081 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui-custom.html']
2022-07-21 13:06:57.493  WARN 21081 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:06:57.493  INFO 21081 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2022-07-21 13:06:57.545  INFO 21081 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@180506b4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2dde609, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a74ec1, org.springframework.security.web.header.HeaderWriterFilter@51b118a5, org.springframework.web.filter.CorsFilter@7f347878, org.springframework.security.web.authentication.logout.LogoutFilter@447e57cb, com.vnpt.intership.news.api.v1.config.security.AuthenticationTokenFilter@57395d77, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a944eb1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ce27ced, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70ca5eb9, org.springframework.security.web.session.SessionManagementFilter@551b4616, org.springframework.security.web.access.ExceptionTranslationFilter@3c36df86, org.springframework.security.web.access.intercept.AuthorizationFilter@3a50fcc1]
2022-07-21 13:06:58.927  INFO 21081 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-21 13:06:59.039  INFO 21081 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-21 13:06:59.055  INFO 21081 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Started NewsApplication in 11.38 seconds (JVM running for 13.831)
2022-07-21 13:06:59.076 DEBUG 21081 --- [restartedMain] o.s.data.mongodb.core.MongoTemplate      : find using query: {} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.RoleEntity in collection: Role
2022-07-21 13:06:59.753  INFO 21081 --- [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-21 13:06:59.754  INFO 21081 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-21 13:06:59.756  INFO 21081 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2022-07-21 13:07:32.904 DEBUG 21081 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:07:33.248 DEBUG 21081 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:07:34.188 DEBUG 21081 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : Saving Document containing fields: [_id, username, email, password, authIdentity, roles, createAt, updateAt, _class]
2022-07-21 13:07:34.285  INFO 21081 --- [http-nio-8080-exec-1] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.signIn, time=1394, unit=MILLISECONDS
2022-07-21 13:07:53.037 DEBUG 21081 --- [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : find using query: { "authIdentity.refreshToken" : "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ2YW5rZXQiLCJyb2xlcyI6W10sImV4cCI6MTY1ODk4ODQ1NCwiaWF0IjoxNjU4MzgzNjU0fQ.cmsKYLeydpXpJXshXqQX_KRqsIqf_O1D0vVaF9HTBviwQEq0H0ke_b5WgU6HF2sm1K13-pUw1Gz9WvOAFZBj9eCbmmbl2bCRESfDJPcxS83U-IltOoF_JprCmEc69dhGxl1nma362Eb8LzWmz9TPdYfhDE8C13sJmJFfH8jd0unqiKhLpGxQENQX16Om3GpwqlJX1EVZXezPMKGUnPzJ5b8IiHLCIgqhgt-q2A5GMu8LION7f55Nv3wqx5PP_IrgvlRp8Yjn_7NXCvCAaBjfqsFA1NKyKTQC82uwjsIUe6SXMrTdG0QQn4FizIM9qcKqFL0EujS-md3pX34D1CqyIw"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:07:53.102  INFO 21081 --- [http-nio-8080-exec-2] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.refreshToken, time=82, unit=MILLISECONDS
2022-07-21 13:07:53.104 ERROR 21081 --- [http-nio-8080-exec-2] c.v.i.n.a.v.e.GlobalExceptionHandler     : SERVER ERROR: java.lang.ClassCastException: class java.lang.String cannot be cast to class org.springframework.security.core.userdetails.User (java.lang.String is in module java.base of loader 'bootstrap'; org.springframework.security.core.userdetails.User is in unnamed module of loader 'app')
2022-07-21 13:12:13.005  INFO 21642 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 21642 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 13:12:13.012  INFO 21642 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 13:12:13.310  INFO 21642 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 13:12:13.311  INFO 21642 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 13:12:14.904  INFO 21642 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:12:14.905  INFO 21642 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 13:12:14.973  INFO 21642 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 64 ms. Found 4 MongoDB repository interfaces.
2022-07-21 13:12:14.985  INFO 21642 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:12:14.986  INFO 21642 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 13:12:15.000  INFO 21642 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:12:15.001  INFO 21642 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:12:15.002  INFO 21642 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:12:15.002  INFO 21642 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:12:15.003  INFO 21642 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2022-07-21 13:12:15.905  INFO 21642 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 13:12:15.913  INFO 21642 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 13:12:15.913  INFO 21642 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 13:12:16.013  INFO 21642 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 13:12:16.014  INFO 21642 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2702 ms
2022-07-21 13:12:18.778  INFO 21642 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-21 13:12:19.543  WARN 21642 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:12:19.544  INFO 21642 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/api-docs/**']
2022-07-21 13:12:19.545  WARN 21642 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui-custom.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:12:19.545  INFO 21642 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui-custom.html']
2022-07-21 13:12:19.545  WARN 21642 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:12:19.545  INFO 21642 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2022-07-21 13:12:19.593  INFO 21642 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5f439a23, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6751b5e9, org.springframework.security.web.context.SecurityContextPersistenceFilter@538dc4a, org.springframework.security.web.header.HeaderWriterFilter@52c18492, org.springframework.web.filter.CorsFilter@747d667e, org.springframework.security.web.authentication.logout.LogoutFilter@716f14e3, com.vnpt.intership.news.api.v1.config.security.AuthenticationTokenFilter@43a59265, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ff84b2d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6fa553b9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bee6648, org.springframework.security.web.session.SessionManagementFilter@2dbd9d8b, org.springframework.security.web.access.ExceptionTranslationFilter@22fb7dd7, org.springframework.security.web.access.intercept.AuthorizationFilter@48381298]
2022-07-21 13:12:22.829  INFO 21642 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-21 13:12:23.022  INFO 21642 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-21 13:12:23.065  INFO 21642 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Started NewsApplication in 10.88 seconds (JVM running for 12.691)
2022-07-21 13:12:23.094 DEBUG 21642 --- [restartedMain] o.s.data.mongodb.core.MongoTemplate      : find using query: {} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.RoleEntity in collection: Role
2022-07-21 13:12:23.601  INFO 21642 --- [RMI TCP Connection(8)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-21 13:12:23.603  INFO 21642 --- [RMI TCP Connection(8)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-21 13:12:23.606  INFO 21642 --- [RMI TCP Connection(8)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2022-07-21 13:12:39.786  INFO 21642 --- [http-nio-8080-exec-3] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 182 ms
2022-07-21 13:12:54.593 DEBUG 21642 --- [http-nio-8080-exec-4] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:12:55.040 DEBUG 21642 --- [http-nio-8080-exec-4] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:12:55.440 DEBUG 21642 --- [http-nio-8080-exec-4] o.s.data.mongodb.core.MongoTemplate      : Saving Document containing fields: [_id, username, email, password, authIdentity, roles, createAt, updateAt, _class]
2022-07-21 13:12:55.522  INFO 21642 --- [http-nio-8080-exec-4] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.signIn, time=943, unit=MILLISECONDS
2022-07-21 13:13:13.504 DEBUG 21642 --- [http-nio-8080-exec-5] o.s.data.mongodb.core.MongoTemplate      : find using query: { "authIdentity.refreshToken" : "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ2YW5rZXQiLCJyb2xlcyI6W10sImV4cCI6MTY1ODk4ODc3NSwiaWF0IjoxNjU4MzgzOTc1fQ.TAj8ikREbCI4EO1xgRUvIisxqR4yUUPY7tsnnlHSp2zqBG4j_w1lLyoGW_ZV32eCYNm0pgQcoRtQ9mjatuYzMdNBSIOT0WmOAYAYGa9cDwEKaYoetU3es-dFt7aP9DqGFgz0gWhbs0YR6PyKwq0j_yxMoRF--IVVtWn_nSr5tf66RGHjn7MAYTvmDC2s7X61uFthzXpFx5GXKLrGS5ecEMAJvXncORV8_SEQ4z3VX7Be0zzeS6i2AL1YcxM5vHnX7KM1yG8NQwJKReB7SSwUzMk7GgFxhWXi0xYBiRRGIzwHpGjnswbA15eLQbbSfQrKKUdZMb4yHD0PtcSpBhQKKA"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:13:13.788  INFO 21642 --- [http-nio-8080-exec-5] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.refreshToken, time=302, unit=MILLISECONDS
2022-07-21 13:13:13.789 ERROR 21642 --- [http-nio-8080-exec-5] c.v.i.n.a.v.e.GlobalExceptionHandler     : SERVER ERROR: class java.lang.String cannot be cast to class org.springframework.security.core.userdetails.User (java.lang.String is in module java.base of loader 'bootstrap'; org.springframework.security.core.userdetails.User is in unnamed module of loader 'app')
2022-07-21 13:27:35.881  INFO 22750 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 22750 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 13:27:35.884  INFO 22750 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 13:27:36.049  INFO 22750 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 13:27:36.050  INFO 22750 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 13:27:37.660  INFO 22750 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:27:37.661  INFO 22750 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 13:27:37.729  INFO 22750 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 64 ms. Found 4 MongoDB repository interfaces.
2022-07-21 13:27:37.739  INFO 22750 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:27:37.740  INFO 22750 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 13:27:37.753  INFO 22750 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:27:37.754  INFO 22750 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:27:37.754  INFO 22750 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:27:37.755  INFO 22750 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:27:37.756  INFO 22750 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2022-07-21 13:27:38.608  INFO 22750 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 13:27:38.616  INFO 22750 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 13:27:38.616  INFO 22750 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 13:27:38.710  INFO 22750 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 13:27:38.710  INFO 22750 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2656 ms
2022-07-21 13:27:41.745  INFO 22750 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-21 13:27:42.420  WARN 22750 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:27:42.421  INFO 22750 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/api-docs/**']
2022-07-21 13:27:42.421  WARN 22750 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui-custom.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:27:42.421  INFO 22750 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui-custom.html']
2022-07-21 13:27:42.421  WARN 22750 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:27:42.421  INFO 22750 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2022-07-21 13:27:42.470  INFO 22750 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2b8efb72, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7cd614de, org.springframework.security.web.context.SecurityContextPersistenceFilter@6997139e, org.springframework.security.web.header.HeaderWriterFilter@85e3357, org.springframework.web.filter.CorsFilter@1ae4d163, org.springframework.security.web.authentication.logout.LogoutFilter@5be11e2c, com.vnpt.intership.news.api.v1.config.security.AuthenticationTokenFilter@5171e270, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@257d63db, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3565e7ec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@73b48c90, org.springframework.security.web.session.SessionManagementFilter@49551aea, org.springframework.security.web.access.ExceptionTranslationFilter@325da850, org.springframework.security.web.access.intercept.AuthorizationFilter@7a1e8ae7]
2022-07-21 13:27:44.084  INFO 22750 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-21 13:27:44.194  INFO 22750 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-21 13:27:44.219  INFO 22750 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Started NewsApplication in 9.06 seconds (JVM running for 10.122)
2022-07-21 13:27:44.239 DEBUG 22750 --- [restartedMain] o.s.data.mongodb.core.MongoTemplate      : find using query: {} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.RoleEntity in collection: Role
2022-07-21 13:27:44.820  INFO 22750 --- [RMI TCP Connection(1)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-21 13:27:44.823  INFO 22750 --- [RMI TCP Connection(1)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-21 13:27:44.828  INFO 22750 --- [RMI TCP Connection(1)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2022-07-21 13:30:21.914 DEBUG 22750 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:30:22.385 DEBUG 22750 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:30:22.748 DEBUG 22750 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : Saving Document containing fields: [_id, username, email, password, authIdentity, roles, createAt, updateAt, _class]
2022-07-21 13:30:22.832  INFO 22750 --- [http-nio-8080-exec-1] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.signIn, time=931, unit=MILLISECONDS
2022-07-21 13:30:40.132 DEBUG 22750 --- [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : find using query: { "authIdentity.refreshToken" : "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ2YW5rZXQiLCJyb2xlcyI6W10sImV4cCI6MTY1ODk4OTgyMiwiaWF0IjoxNjU4Mzg1MDIyfQ.TcPSRiymEr0TLY8jOWdqngFvBLss3BcCwUqilDgt914AFvmfQxd5Zg549uKiGhQU_Sk1x--I8EnBxsJUNjo3R1meJOBAsGfCImgFZKoQMwCi9k6k7qfr_03CeFjgOuC7pvPxe2ouXYjDb0wKPPHbce8IgsKppBoAW1rMxV6pUhmh4myHGeDYXxCp00oeE-ZPgJF0JY4CgOnLmABFh9BAI9iWPTgFEq1bpbbbu9a_2xsiClgRP-Einwsw706iPYWtLrXVRV_15SyTx7Lchg0O4PGiYMzpEg1-FNf93nVANz9BHzpuLQebFeqaIFd4Zgeqd1WGDvgDQY5X5CkihH1ISA"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:30:40.223  INFO 22750 --- [http-nio-8080-exec-2] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.refreshToken, time=107, unit=MILLISECONDS
2022-07-21 13:30:40.225 ERROR 22750 --- [http-nio-8080-exec-2] c.v.i.n.a.v.e.GlobalExceptionHandler     : SERVER ERROR: class java.lang.String cannot be cast to class org.springframework.security.core.userdetails.User (java.lang.String is in module java.base of loader 'bootstrap'; org.springframework.security.core.userdetails.User is in unnamed module of loader 'app')
2022-07-21 13:34:07.620  INFO 23352 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 23352 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 13:34:07.622  INFO 23352 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 13:34:07.697  INFO 23352 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 13:34:07.698  INFO 23352 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 13:34:09.564  INFO 23352 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:34:09.565  INFO 23352 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 13:34:09.654  INFO 23352 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 84 ms. Found 4 MongoDB repository interfaces.
2022-07-21 13:34:09.669  INFO 23352 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:34:09.671  INFO 23352 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 13:34:09.685  INFO 23352 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:34:09.685  INFO 23352 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:34:09.686  INFO 23352 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:34:09.687  INFO 23352 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:34:09.687  INFO 23352 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2022-07-21 13:34:10.654  INFO 23352 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 13:34:10.664  INFO 23352 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 13:34:10.665  INFO 23352 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 13:34:10.761  INFO 23352 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 13:34:10.761  INFO 23352 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3062 ms
2022-07-21 13:34:13.475  INFO 23352 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-21 13:34:14.070  WARN 23352 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:34:14.071  INFO 23352 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/api-docs/**']
2022-07-21 13:34:14.071  WARN 23352 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui-custom.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:34:14.071  INFO 23352 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui-custom.html']
2022-07-21 13:34:14.071  WARN 23352 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:34:14.071  INFO 23352 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2022-07-21 13:34:14.118  INFO 23352 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@19e07e47, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68390543, org.springframework.security.web.context.SecurityContextPersistenceFilter@59ebeb95, org.springframework.security.web.header.HeaderWriterFilter@1b6ace57, org.springframework.web.filter.CorsFilter@58ebf9b6, org.springframework.security.web.authentication.logout.LogoutFilter@ab4f096, com.vnpt.intership.news.api.v1.config.security.AuthenticationTokenFilter@1698f2b9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4dcacbcf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65c71e0a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36388a76, org.springframework.security.web.session.SessionManagementFilter@15463297, org.springframework.security.web.access.ExceptionTranslationFilter@42e37ff5, org.springframework.security.web.access.intercept.AuthorizationFilter@17e845e1]
2022-07-21 13:34:15.196  INFO 23352 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-21 13:34:15.282  INFO 23352 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-21 13:34:15.300  INFO 23352 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Started NewsApplication in 8.454 seconds (JVM running for 9.53)
2022-07-21 13:34:15.319 DEBUG 23352 --- [restartedMain] o.s.data.mongodb.core.MongoTemplate      : find using query: {} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.RoleEntity in collection: Role
2022-07-21 13:34:15.593  INFO 23352 --- [RMI TCP Connection(3)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-21 13:34:15.595  INFO 23352 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-21 13:34:15.597  INFO 23352 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2022-07-21 13:34:27.051 DEBUG 23352 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:34:27.383 DEBUG 23352 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:34:27.721 DEBUG 23352 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : Saving Document containing fields: [_id, username, email, password, authIdentity, roles, createAt, updateAt, _class]
2022-07-21 13:34:27.799  INFO 23352 --- [http-nio-8080-exec-1] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.signIn, time=760, unit=MILLISECONDS
2022-07-21 13:34:40.670 DEBUG 23352 --- [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : find using query: { "authIdentity.refreshToken" : "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ2YW5rZXQiLCJyb2xlcyI6W10sImV4cCI6MTY1ODk5MDA2NywiaWF0IjoxNjU4Mzg1MjY3fQ.DMFsXxFJ5wNk70xkEKWc6rGXDuMRTfPhPhTk1fUb4bfWRoot0n6YRmE98w6aByYls9zE_i0j4sPLd1ZuWvx7tEz3eJYano5zPA-J_WRSiFf8Ce0aehNpkBC0eEIvReX14BCDbIm5w_JoJ6x5lZNaslYOCwKl48US7HH3z8OOP9jhuq7lYoZTDUC3Op4vZPhy5PYWz2rWzn1G7Iq7o03Q0ybOIo4A_9FvsnOWhIclaY8D6G3Rai3enMYsCvBdRljdqpMXnOzitg5-iSx38L3WQQIoA5sAizF6W6uQtpIFnFhgLPeCydRLPX2BiPgYdBbslMmtYn0nOYv3GWE3b4k8uw"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:34:40.811 ERROR 23352 --- [http-nio-8080-exec-2] c.v.i.n.a.v.s.impl.UserServiceImpl       : anonymousUser
2022-07-21 13:34:40.825  INFO 23352 --- [http-nio-8080-exec-2] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.refreshToken, time=172, unit=MILLISECONDS
2022-07-21 13:34:40.828 ERROR 23352 --- [http-nio-8080-exec-2] c.v.i.n.a.v.e.GlobalExceptionHandler     : SERVER ERROR: java.lang.ClassCastException: class java.lang.String cannot be cast to class org.springframework.security.core.userdetails.User (java.lang.String is in module java.base of loader 'bootstrap'; org.springframework.security.core.userdetails.User is in unnamed module of loader 'app')
2022-07-21 13:37:59.132  INFO 23767 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 23767 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 13:37:59.134  INFO 23767 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 13:37:59.216  INFO 23767 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 13:37:59.216  INFO 23767 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 13:38:00.952  INFO 23767 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:38:00.953  INFO 23767 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 13:38:01.033  INFO 23767 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 75 ms. Found 4 MongoDB repository interfaces.
2022-07-21 13:38:01.044  INFO 23767 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:38:01.045  INFO 23767 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 13:38:01.059  INFO 23767 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:38:01.060  INFO 23767 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:38:01.061  INFO 23767 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:38:01.062  INFO 23767 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:38:01.062  INFO 23767 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2022-07-21 13:38:02.020  INFO 23767 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 13:38:02.027  INFO 23767 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 13:38:02.028  INFO 23767 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 13:38:02.117  INFO 23767 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 13:38:02.117  INFO 23767 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2900 ms
2022-07-21 13:38:04.900  INFO 23767 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-21 13:38:05.557  WARN 23767 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:38:05.558  INFO 23767 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/api-docs/**']
2022-07-21 13:38:05.559  WARN 23767 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui-custom.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:38:05.559  INFO 23767 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui-custom.html']
2022-07-21 13:38:05.559  WARN 23767 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:38:05.559  INFO 23767 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2022-07-21 13:38:05.605  INFO 23767 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2ab86c2f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3292d649, org.springframework.security.web.context.SecurityContextPersistenceFilter@2881e4e7, org.springframework.security.web.header.HeaderWriterFilter@29da04c6, org.springframework.web.filter.CorsFilter@3583e07d, org.springframework.security.web.authentication.logout.LogoutFilter@2c371642, com.vnpt.intership.news.api.v1.config.security.AuthenticationTokenFilter@481c50a3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65116d1b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c3e4190, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45c4c1d5, org.springframework.security.web.session.SessionManagementFilter@2ec998fd, org.springframework.security.web.access.ExceptionTranslationFilter@6c21df49, org.springframework.security.web.access.intercept.AuthorizationFilter@605039ce]
2022-07-21 13:38:06.693  INFO 23767 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-21 13:38:06.782  INFO 23767 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-21 13:38:06.801  INFO 23767 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Started NewsApplication in 8.357 seconds (JVM running for 9.394)
2022-07-21 13:38:06.816 DEBUG 23767 --- [restartedMain] o.s.data.mongodb.core.MongoTemplate      : find using query: {} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.RoleEntity in collection: Role
2022-07-21 13:38:07.095  INFO 23767 --- [RMI TCP Connection(8)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-21 13:38:07.096  INFO 23767 --- [RMI TCP Connection(8)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-21 13:38:07.099  INFO 23767 --- [RMI TCP Connection(8)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2022-07-21 13:38:32.464 DEBUG 23767 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:38:32.820 DEBUG 23767 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:38:33.199 DEBUG 23767 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : Saving Document containing fields: [_id, username, email, password, authIdentity, roles, createAt, updateAt, _class]
2022-07-21 13:38:34.141  INFO 23767 --- [http-nio-8080-exec-1] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.signIn, time=1691, unit=MILLISECONDS
2022-07-21 13:38:54.159 DEBUG 23767 --- [http-nio-8080-exec-3] o.s.data.mongodb.core.MongoTemplate      : find using query: { "authIdentity.refreshToken" : "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ2YW5rZXQiLCJyb2xlcyI6W10sImV4cCI6MTY1ODk5MDMxMywiaWF0IjoxNjU4Mzg1NTEzfQ.bHQKRNOS1LSh2KkmznExUNGPwJGZg-6gGNDdoqHA_4ENHzbzGdU1PQZUUWEo2sjLmw2ER_J-yOSyg5Xpo20IgCdylOBnKxOfqxJ8n1XH3tICwufCSn-l_Aq0T1P80CWj_MF9pBBYQjImBvMqj9gkaTYFY6mXZx7D_Q2zTzvAycy6SEtUZpyjn7A4FxewjDfXHLJiTodpTupKiSZMZuQURSzI1wc0Tlj0hp7Yyn8GhYiA4bZKWL1Raxtq-cgeK_bzDi4gMmikZuQ6wEtci5ZZ00INjA5CfX6yhy-ygblZkcRI8tCGXiSE-jtGFLEVMuFwCwkWLfjfwP0s-QA2ICJ7AA"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:38:54.227  INFO 23767 --- [http-nio-8080-exec-3] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.refreshToken, time=89, unit=MILLISECONDS
2022-07-21 13:38:54.229 ERROR 23767 --- [http-nio-8080-exec-3] c.v.i.n.a.v.e.GlobalExceptionHandler     : SERVER ERROR: class java.lang.String cannot be cast to class org.springframework.security.authentication.UsernamePasswordAuthenticationToken (java.lang.String is in module java.base of loader 'bootstrap'; org.springframework.security.authentication.UsernamePasswordAuthenticationToken is in unnamed module of loader 'app')
2022-07-21 13:48:37.747  INFO 25184 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 25184 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 13:48:37.750  INFO 25184 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 13:48:37.915  INFO 25184 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 13:48:37.916  INFO 25184 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 13:48:39.874  INFO 25184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:48:39.875  INFO 25184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 13:48:39.940  INFO 25184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 60 ms. Found 4 MongoDB repository interfaces.
2022-07-21 13:48:39.951  INFO 25184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:48:39.952  INFO 25184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 13:48:39.966  INFO 25184 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:48:39.966  INFO 25184 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:48:39.967  INFO 25184 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:48:39.968  INFO 25184 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:48:39.968  INFO 25184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2022-07-21 13:48:40.798  INFO 25184 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 13:48:40.805  INFO 25184 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 13:48:40.806  INFO 25184 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 13:48:40.904  INFO 25184 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 13:48:40.905  INFO 25184 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2987 ms
2022-07-21 13:48:43.839  INFO 25184 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-21 13:48:44.433  WARN 25184 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:48:44.433  INFO 25184 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/api-docs/**']
2022-07-21 13:48:44.434  WARN 25184 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui-custom.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:48:44.434  INFO 25184 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui-custom.html']
2022-07-21 13:48:44.434  WARN 25184 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:48:44.434  INFO 25184 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2022-07-21 13:48:44.478  INFO 25184 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@671e126f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c6aa5aa, org.springframework.security.web.context.SecurityContextPersistenceFilter@2840e39f, org.springframework.security.web.header.HeaderWriterFilter@4a407d43, org.springframework.web.filter.CorsFilter@ca76bf3, org.springframework.security.web.authentication.logout.LogoutFilter@16b60179, com.vnpt.intership.news.api.v1.config.security.AuthenticationTokenFilter@14b16722, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5cf7c33c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@35fb7321, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@76355a80, org.springframework.security.web.session.SessionManagementFilter@172cfe94, org.springframework.security.web.access.ExceptionTranslationFilter@5dabba30, org.springframework.security.web.access.intercept.AuthorizationFilter@76a3cb68]
2022-07-21 13:48:45.517  INFO 25184 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-21 13:48:45.596  INFO 25184 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-21 13:48:45.608  INFO 25184 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Started NewsApplication in 8.676 seconds (JVM running for 10.449)
2022-07-21 13:48:45.624 DEBUG 25184 --- [restartedMain] o.s.data.mongodb.core.MongoTemplate      : find using query: {} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.RoleEntity in collection: Role
2022-07-21 13:48:45.968  INFO 25184 --- [RMI TCP Connection(3)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-21 13:48:45.969  INFO 25184 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-21 13:48:45.971  INFO 25184 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2022-07-21 13:49:06.580 DEBUG 25184 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:49:06.927 DEBUG 25184 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "username" : "vanket"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:49:07.346 DEBUG 25184 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : Saving Document containing fields: [_id, username, email, password, authIdentity, roles, createAt, updateAt, _class]
2022-07-21 13:49:07.423  INFO 25184 --- [http-nio-8080-exec-1] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.signIn, time=856, unit=MILLISECONDS
2022-07-21 13:49:24.046 DEBUG 25184 --- [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : find using query: { "authIdentity.refreshToken" : "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ2YW5rZXQiLCJyb2xlcyI6W10sImV4cCI6MTY1ODk5MDk0NywiaWF0IjoxNjU4Mzg2MTQ3fQ.P6OHBZp_Y946GZR4f-nhXdvMVbi_vtkBd11e7XrvKhEJqdmnxGdCEm3aPoZhnm4RoSH4iov9bKnbUBcNwPotoziD7qIMSQh_D5VpnL8epCNuJWuLjMoYvWxKQOVlRi1wqsC594zaGLl6lT2Xz0LAINUMTsvpnO5faYmd2iQlL_i85QG9VLMxTtv5xOV9VLtTQVnHYrhroz5KFNjBxkzUWIOjiwnD89jCcPp9lnyhl4fShFxsqTWkV5dQgM_Vl-RZjUgMtkyS7Lq1xKP_6HLjRmZsXR5vqu1W7yCKp365GLn6qfHpI3BFx1wlxC_Fx0mIKzsiJ_dBRLVTgDK77dgg8A"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:49:24.188 DEBUG 25184 --- [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : Saving Document containing fields: [_id, username, email, password, authIdentity, roles, createAt, updateAt, _class]
2022-07-21 13:49:24.245  INFO 25184 --- [http-nio-8080-exec-2] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.refreshToken, time=217, unit=MILLISECONDS
2022-07-21 13:51:24.948  INFO 25630 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Starting NewsApplication using Java 11.0.15 on vanket-X550LA with PID 25630 (/home/vanket/Desktop/news/target/classes started by vanket in /home/vanket/Desktop/news)
2022-07-21 13:51:24.950  INFO 25630 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : The following 1 profile is active: "dev"
2022-07-21 13:51:25.052  INFO 25630 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-07-21 13:51:25.052  INFO 25630 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-07-21 13:51:26.517  INFO 25630 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:51:26.518  INFO 25630 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-07-21 13:51:26.585  INFO 25630 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 63 ms. Found 4 MongoDB repository interfaces.
2022-07-21 13:51:26.595  INFO 25630 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-07-21 13:51:26.596  INFO 25630 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-21 13:51:26.609  INFO 25630 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.ArticleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:51:26.609  INFO 25630 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.CategoriesRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:51:26.610  INFO 25630 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:51:26.611  INFO 25630 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.vnpt.intership.news.api.v1.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2022-07-21 13:51:26.611  INFO 25630 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2022-07-21 13:51:27.509  INFO 25630 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-21 13:51:27.521  INFO 25630 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-21 13:51:27.523  INFO 25630 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.64]
2022-07-21 13:51:27.642  INFO 25630 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-21 13:51:27.642  INFO 25630 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2589 ms
2022-07-21 13:51:32.631  INFO 25630 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-21 13:51:33.475  WARN 25630 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:51:33.476  INFO 25630 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/api-docs/**']
2022-07-21 13:51:33.476  WARN 25630 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui-custom.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:51:33.477  INFO 25630 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui-custom.html']
2022-07-21 13:51:33.477  WARN 25630 --- [restartedMain] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2022-07-21 13:51:33.477  INFO 25630 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2022-07-21 13:51:33.533  INFO 25630 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@50ae802d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@429bede4, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c9afcbc, org.springframework.security.web.header.HeaderWriterFilter@618caddc, org.springframework.web.filter.CorsFilter@5bc12da6, org.springframework.security.web.authentication.logout.LogoutFilter@c83d368, com.vnpt.intership.news.api.v1.config.security.AuthenticationTokenFilter@2768cfe2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@55fac0a9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18493cc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61ccacb7, org.springframework.security.web.session.SessionManagementFilter@9bdb04, org.springframework.security.web.access.ExceptionTranslationFilter@7d1db8b5, org.springframework.security.web.access.intercept.AuthorizationFilter@5b866a58]
2022-07-21 13:51:34.836  INFO 25630 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-21 13:51:34.940  INFO 25630 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-21 13:51:34.959  INFO 25630 --- [restartedMain] com.vnpt.intership.news.NewsApplication  : Started NewsApplication in 10.727 seconds (JVM running for 11.66)
2022-07-21 13:51:34.988 DEBUG 25630 --- [restartedMain] o.s.data.mongodb.core.MongoTemplate      : find using query: {} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.RoleEntity in collection: Role
2022-07-21 13:51:35.571  INFO 25630 --- [RMI TCP Connection(10)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-21 13:51:35.577  INFO 25630 --- [RMI TCP Connection(10)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-21 13:51:35.579  INFO 25630 --- [RMI TCP Connection(10)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2022-07-21 13:51:37.094 DEBUG 25630 --- [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "authIdentity.refreshToken" : "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ2YW5rZXQiLCJyb2xlcyI6W10sImV4cCI6MTY1ODk5MDk0NywiaWF0IjoxNjU4Mzg2MTQ3fQ.P6OHBZp_Y946GZR4f-nhXdvMVbi_vtkBd11e7XrvKhEJqdmnxGdCEm3aPoZhnm4RoSH4iov9bKnbUBcNwPotoziD7qIMSQh_D5VpnL8epCNuJWuLjMoYvWxKQOVlRi1wqsC594zaGLl6lT2Xz0LAINUMTsvpnO5faYmd2iQlL_i85QG9VLMxTtv5xOV9VLtTQVnHYrhroz5KFNjBxkzUWIOjiwnD89jCcPp9lnyhl4fShFxsqTWkV5dQgM_Vl-RZjUgMtkyS7Lq1xKP_6HLjRmZsXR5vqu1W7yCKp365GLn6qfHpI3BFx1wlxC_Fx0mIKzsiJ_dBRLVTgDK77dgg8A"} fields: Document{{}} for class: class com.vnpt.intership.news.api.v1.domain.entity.UserEntity in collection: User
2022-07-21 13:51:37.177  INFO 25630 --- [http-nio-8080-exec-1] c.v.i.n.api.v1.component.LoggingAspect   : API: AuthController.refreshToken, time=157, unit=MILLISECONDS
2022-07-21 13:51:37.182 ERROR 25630 --- [http-nio-8080-exec-1] c.v.i.n.a.v.e.GlobalExceptionHandler     : Bad request: Refresh token is not in database!
